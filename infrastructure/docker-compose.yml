# THIS IS FOR LOCAL DEV

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: cshare-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - ./data/zookeeper/data:/var/lib/zookeeper/data
      - ./data/zookeeper/log:/var/lib/zookeeper/log
    networks:
      - cshare-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: cshare-kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./data/kafka/data:/var/lib/kafka/data
    networks:
      - cshare-network
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list"]
      interval: 10s
      timeout: 5s
      retries: 5

  debezium:
    image: quay.io/debezium/connect:latest
    container_name: cshare-debezium-connector
    # restart: unless-stopped
    ports:
      - "8083:8083"
    environment:
      BOOTSTRAP_SERVERS: kafka:29092
      GROUP_ID: debezium
      CONFIG_STORAGE_TOPIC: debezium_configs
      OFFSET_STORAGE_TOPIC: debezium_offsets
      CONTENT_POSTGRES_USER: ${CONTENT_POSTGRES_USER}
      CONTENT_POSTGRES_PASSWORD: ${CONTENT_POSTGRES_PASSWORD}
      CONTENT_POSTGRES_DB: ${CONTENT_POSTGRES_DB}
    depends_on:
      kafka:
        condition: service_healthy
      content-db:
        condition: service_healthy
    volumes:
      - ./data/debezium/data:/kafka/data
      - ./data/debezium/logs:/kafka/logs
      - ./data/debezium/config:/kafka/config
      - ./scripts/debezium-connector-init.sh:/scripts/debezium-connector-init.sh
    networks:
      - cshare-network

  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:8.15.3
  #   container_name: cshare-elasticsearch
  #   # restart: unless-stopped
  #   ports:
  #     - "9200:9200"
  #   environment:
  #     discovery.type: single-node
  #     ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
  #   mem_limit: ${MEM_LIMIT}
  #   networks:
  #     - cshare-network
  
  content-db:
    image: postgres:latest
    container_name: cshare-content-db
    # restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${CONTENT_POSTGRES_USER}
      POSTGRES_PASSWORD: ${CONTENT_POSTGRES_PASSWORD}
      POSTGRES_DB: ${CONTENT_POSTGRES_DB}
    volumes:
      - ./data/postgres/data:/var/lib/postgresql/data
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
    networks:
      - cshare-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${CONTENT_POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  localstack:
    image: localstack/localstack
    container_name: cshare-localstack
    ports:
      - "127.0.0.1:4566:4566"            # LocalStack Gateway
      - "127.0.0.1:4510-4559:4510-4559"  # external services port range
    environment:
      - SERVICES=s3
      - DEBUG=1
    volumes:
      - ./data/localstack:/var/lib/localstack
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - cshare-network

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8085:8080
    depends_on:
      - kafka
      - debezium
    environment:
      KAFKA_CLUSTERS_0_NAME: Kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: debezium
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://debezium:8083
    networks:
      - cshare-network
  
  # kibana:
  #   image: docker.elastic.co/kibana/kibana:8.15.3
  #   container_name: cshare-kibana
  #   # restart: unless-stopped
  #   ports:
  #     - 5601:5601
  #   environment:
  #     SERVERNAME: kibana
  #     ELASTICSEARCH_HOSTS: http://elasticsearch:9200
  #     ELASTICSEARCH_USERNAME: elastic
  #     ELASTICSEARCH_PASSWORD: ${ELASTIC_PASSWORD}
  #   mem_limit: ${MEM_LIMIT}
  #   volumes:
  #     - ./container-data/kibana/data:/usr/share/kibana/data
  #   depends_on:
  #     - elasticsearch
  #   networks:
  #     - cshare-network

networks:
  cshare-network:
    driver: bridge
